  /* -------------------Base - config------------------- */

  /* collection - config */
  {
    "blocks" : [{
      "block"    : "int",
      "timeStamp": "date or var"
      }],
    "db"     : {
      "Base"     : [],
      "Coll"     : []
    }
  }

 /* -------------------Base - users------------------- */

 /* collection - users */

{
  "_id"      : "ObjectId",
  "ver"      : 1,
  "user"     : "string",
  "passwd"   : "hash",
  "wallet"   : ["string"],
  "rate_avg" : "var",
  "rate"     : [{
    "_id"       : "ObjectId",
    "_idFrom"   : "ObjectId",
    "_idTo"     : "ObjectId",
    "time"      : "date or var",
    "star"      : "var",
    "comment"   : "string"
    }]
}


 /* collection - comment */

 /* _idFrom    : Origem do comentário */
 /* _idTo      : Destinatário do comentário */
 /* timeStamp  : Horario realizado */
 /* star       : Avaliação entre 1 a 5 */
 /* comment    : Comentário em texto */

{
  "_id"       : "ObjectId",
  "_idFrom"   : "ObjectId",
  "_idTo"     : "ObjectId",
  "time"      : "date or var",
  "star"      : "var",
  "comment"   : "string"
}

/* -------------------Base - wallets------------------- */


 /* collection - wallet */

 /* _id      : Utilizando o address como ID único */
 /* owner    : Identificador de um usuário que informa ser proprietario */
 /* confirmed: Confirmação do sistema da posse da carteira */
 /* orphan   : Carteira sem dono identificado */
 /* miner    : Carteira de um possível mineiro */
 /* pool     : Carteira de um sistema de mineração em cooperação */

{
  "_id"      : "address : string",
  "hash160"  : "string",
  "ver"      : 1,
  "owner"    : "string",
  "confirmed": "boolean",
  "miner"    : "boolean",
  "orphan"   : "boolean",
  "pool"     : "boolean",
  "n_tx"     : "var",
  "txs"      : [{
      "time"      : "date or var",
      "hash"      : "string",
      "input"     : [{"addr": "string", "value" : "string", "spent" : "boolean"}],
      "out"       : [{"addr": "string", "value" : "string", "spent" : "boolean"}]
    }]
}


/* Status */

/* Será criado cinco collections onde será armazenada as carteiras
   informada pelo usuário, conforme a regra abaixo:

   pending   : Carteira informada pelo usuario e pronto para análise
        _idUser   : ID do usuário que cadastrou
        wallet    : carteira no formato hash160

   claimed   : Carteira gerada e analisada. É um ponto de busca padrão
        _idUser   : ID do usuário que cadastrou
        wallet    : carteira no formato hash160
        miner     : carteira que recebeu transferência cota de mineração

   confirmed : Usuário confirma a posse e o sistema validou. ponto de busca.
       _idUser   : ID do usuário que cadastrou
       wallet    : carteira no formato hash160
       miner     : carteira que recebeu transferência cota de mineração
       script    : transação de confirmação verificada pelo sistema

   pool      : Carteira utilizada por sistemas de mineração
       _idUser   : ID do sistema de mineração
       wallet    : carteira no formato hash160 */

/* collection - pending */

{
  "_idUser": "ObjectId",
  "wallet" : "string"
}

/* collection - claimed */

{
  "_idUser": "ObjectId",
  "wallet" : "string",
  "miner"  : "boolean"
}

/* collection - confirmed */

{
  "_idUser": "ObjectId",
  "wallet" : "string",
  "miner"  : "boolean",
  "script" : "string"
}

/* collection - pool */

{
  "_idUser": "ObjectId",
  "wallet" : "string"
}

/* -------------------Modelo de manupulação de dados------------------- */

/* conf     : variáveis de configuração */
/* data     : Objeto com os dados para manipulação */
/* fetch    : Retorno de Solicitações externas */
/* db       : Retorno de Informações armazenadas no banco*/
/* result   : Resultado de manipulação entre fetch e o db */

{
  "conf"  : [],
  "data"  : {
    "fetch"  : [],
    "db"     : [],
    "result" : []
  }
}
